<div class="modal" data-modal="true" id="book_modal">
	<div class="modal-content max-w-[600px] top-[15%]">
		<div class="modal-header py-4 px-5">
			<h3 class="modal-title">Ma lecture</h3>
		</div>
		<div class="modal-body p-0 pb-5">
			<div class="scrollable-y-auto" data-scrollable="true" data-scrollable-max-height="auto" data-scrollable-offset="300px">
				{{ form_start(form) }}
				<div class="flex flex-col gap-5 p-5">
					<div class="flex flex-col gap-1">
						<label for="book" class="form-label font-normal text-gray-900">Livre</label>
						{{ form_widget(form.book) }}
					</div>

					<div class="flex flex-col gap-1">
						<label for="description" class="form-label font-normal text-gray-900">Mes notes</label>
						<div class="flex flex-col w-full gap-1">
							{{ form_widget(form.description) }}
						</div>
					</div>

					<div class="flex flex-col gap-1">
						<label for="rating" class="form-label font-normal text-gray-900">Note</label>
						{{ form_widget(form.rating) }}
					</div>

					<div class="flex flex-col gap-1">
						<label class="switch">
							<span class="switch-label font-normal text-gray-900">Lecture terminée</span>
							{{ form_widget(form.is_read) }}
						</label>
					</div>

					<div class="flex">
						<button type="submit" class="btn btn-primary">Enregistrer</button>
					</div>

					<div id="form-messages" />
				</div>
				{{ form_end(form) }}
			</div>
		</div>
	</div>
</div>

<script>
document.getElementById('book-read-form').addEventListener('submit', function (e) {
    e.preventDefault();

    const form = e.target;
    const formData = new FormData(form);

    fetch(form.action, {
        method: form.method,
        body: formData,
        headers: {
            'X-Requested-With': 'XMLHttpRequest', // tells it is AJAX request
        },
    })
    .then(response => {
        if (response.ok) {
            return response.json();
        }
        throw new Error('Ajout échoué');
    })
    .then(data => {
			const { toDelete, toAdd, message } = data;

      const messageDiv = document.getElementById('form-messages');
      messageDiv.textContent = message;

			if (toDelete) {
				const toDeleteElement = document.getElementById(`bookread-${toDelete.id}`);
				toDeleteElement.parentElement.remove();
			}

			if (toAdd) {
				const row = document.createElement("tr");

				if (toAdd.is_read) {
					const readBookReadsTable = document.querySelector("#read-books-table tbody");

					row.innerHTML = `
						<td id="bookread-${toAdd.id}">
							<div class="flex flex-col gap-2">
								<button class="leading-none font-medium text-start text-sm text-gray-900 hover:text-primary" data-modal-toggle="#book_modal" onclick="setFormFields(${toAdd})">
									${toAdd.book.name}
								</button>
								<span class="text-2sm text-gray-700 font-normal leading-3">
									${toAdd.book.description}
								</span>
							</div>
						</td>
						<td>${toAdd.book.category.name}</td>
						<td>
							<div class="rating">
								${[1, 2, 3, 4, 5]
									.map(rating => {
										return rating <= toAdd.rating
										? `
											<div class="rating-label checked">
												<i class="rating-on ki-solid ki-star text-base leading-none"></i>
												<i class="rating-off ki-outline ki-star text-base leading-none"></i>
											</div>
										`
										: `
											<div class="rating-label">
												<i class="rating-on ki-solid ki-star text-base leading-none"></i>
												<i class="rating-off ki-outline ki-star text-base leading-none"></i>
											</div>
										`;
									})
									.join('')}
							</div>
						</td>
					`;

					readBookReadsTable.appendChild(row);
				} else {
					const unreadBookReadsTable = document.querySelector("#current-books-table tbody");

					const updatedAt = new Date(toAdd.updated_at);
					const formatedUpdatedAd = `${
						String(updatedAt.getDate()).padStart(2, '0')
					}/${
						String(updatedAt.getMonth() + 1).padStart(2, '0')
					}/${
						updatedAt.getFullYear()
					} à ${
						String(updatedAt.getHours()).padStart(2, '0')
					}:${
						String(updatedAt.getMinutes()).padStart(2, '0')
					}`
					row.innerHTML = `
						<td id="bookread-${toAdd.id}">
							<div class="flex flex-col gap-2">
								<button class="leading-none font-medium text-start text-sm text-gray-900 hover:text-primary" data-modal-toggle="#book_modal" onclick="setFormFields(${toAdd})">
									${toAdd.book.name}
								</button>
								<span class="text-2sm text-gray-700 font-normal leading-3">
									${toAdd.book.description}
								</span>
							</div>
						</td>
						<td class="text-end">
							${formatedUpdatedAd}
						</td>
					`;

					unreadBookReadsTable.appendChild(row);
				}
			}
    })
    .catch(error => {
        const messageDiv = document.getElementById('form-messages');
        messageDiv.textContent = error.message;
    });
});
</script>
